AWSTemplateFormatVersion: '2010-09-09'
Description: CloudFormation template to create a VPC, Auto Scaling Group with Windows EC2 instances, Target Groups, S3 bucket, and an ALB.

Resources:
  # VPC
  VPC:
    Type: 'AWS::EC2::VPC'
    Properties:
      CidrBlock: '10.0.0.0/16'
      EnableDnsSupport: true
      EnableDnsHostnames: true
      Tags:
        - Key: Name
          Value: skillsync-VPC

  # Internet Gateway
  InternetGateway:
    Type: 'AWS::EC2::InternetGateway'
    Properties:
      Tags:
        - Key: Name
          Value: skillsync-IGW

  # Attach Internet Gateway to VPC
  AttachGateway:
    Type: 'AWS::EC2::VPCGatewayAttachment'
    Properties:
      VpcId: !Ref VPC
      InternetGatewayId: !Ref InternetGateway

  # Subnets
  # Public Subnet 1
  PublicSubnet1:
    Type: 'AWS::EC2::Subnet'
    Properties:
      AvailabilityZone: !Select [ 0, !GetAZs '' ]
      CidrBlock: '10.0.1.0/24'
      MapPublicIpOnLaunch: true
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: PublicSubnet1
 
  # Public Subnet 2
  PublicSubnet2:
    Type: 'AWS::EC2::Subnet'
    Properties:
      AvailabilityZone: !Select [ 1, !GetAZs '' ]
      CidrBlock: '10.0.2.0/24'
      MapPublicIpOnLaunch: true
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: PublicSubnet2

  # Public Route Table
  PublicRouteTable:
    Type: 'AWS::EC2::RouteTable'
    Properties:
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: PublicRouteTable

  # Public Route
  PublicRoute:
    Type: 'AWS::EC2::Route'
    Properties:
      RouteTableId: !Ref PublicRouteTable
      DestinationCidrBlock: '0.0.0.0/0'
      GatewayId: !Ref InternetGateway

  # Public Subnet 1 Route Table Association
  PublicSubnet1RouteTableAssociation:
    Type: 'AWS::EC2::SubnetRouteTableAssociation'
    Properties:
      SubnetId: !Ref PublicSubnet1
      RouteTableId: !Ref PublicRouteTable

  # Public Subnet 2 Route Table Association
  PublicSubnet2RouteTableAssociation:
    Type: 'AWS::EC2::SubnetRouteTableAssociation'
    Properties:
      SubnetId: !Ref PublicSubnet2
      RouteTableId: !Ref PublicRouteTable

  # Security Group for RDP
  RDPSecurityGroup:
    Type: 'AWS::EC2::SecurityGroup'
    Properties:
      GroupDescription: Allows RDP access
      VpcId: !Ref VPC
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 3389
          ToPort: 3389
          CidrIp: 0.0.0.0/0
      Tags:
        - Key: Name
          Value: RDPSecurityGroup

  # Security Group for ALB
  ALBSecurityGroup:
    Type: 'AWS::EC2::SecurityGroup'
    Properties:
      GroupDescription: Allows HTTP access
      VpcId: !Ref VPC
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: 0.0.0.0/0
      Tags:
        - Key: Name
          Value: ALBSecurityGroup

  # Launch Template
  LaunchTemplate:
    Type: 'AWS::EC2::LaunchTemplate'
    Properties:
      LaunchTemplateName: SkillsyncLaunchTemplate
      LaunchTemplateData:
        ImageId: ami-07cc1bbe145f35b58 # Microsoft Windows Server 2022 Base
        InstanceType: t3.micro
        SecurityGroupIds:
          - !Ref RDPSecurityGroup
          - !Ref ALBSecurityGroup
        KeyName: skillsync_key
        UserData:
          Fn::Base64: |
            <powershell>
          # Update the server
            Install-WindowsFeature -Name Web-Server -IncludeManagementTools

          # Start the IIS service
            Start-Service -Name 'W3SVC'

          # Ensure IIS starts automatically on boot
            Set-Service -Name 'W3SVC' -StartupType Automatic

          # Create a simple HTML page with a custom message
            New-Item -Path "C:\inetpub\wwwroot\index.html" -ItemType File -Force
            Add-Content -Path "C:\inetpub\wwwroot\index.html" -Value "Welcome to SkillSync week 5 project!"

          # Output a message indicating completion
            Write-Host "Web server setup complete"
            </powershell>

  # EC2 Instance
  EC2Instance:
    Type: 'AWS::EC2::Instance'
        InstanceType: t3.micro
        SecurityGroupIds:
          - !Ref RDPSecurityGroup
          - !Ref ALBSecurityGroup
        UserData:
          Fn::Base64: |
            <powershell>
            Write-Host "User data script running..."
            </powershell>

  # Application Load Balancer
  ALB:
    Type: 'AWS::ElasticLoadBalancingV2::LoadBalancer'
    Properties:
      Subnets:
        - !Ref PublicSubnet1
        - !Ref PublicSubnet2
      SecurityGroups:
        - !Ref ALBSecurityGroup
        - !Ref RDPSecurityGroup
      Scheme: internet-facing
      LoadBalancerAttributes:
        - Key: idle_timeout.timeout_seconds
          Value: '60'
      Tags:
        - Key: Name
          Value: skillsync-ALB

  # ALB Listener
  ALBListener:
    Type: 'AWS::ElasticLoadBalancingV2::Listener'
    Properties:
      DefaultActions:
        - Type: forward
          TargetGroupArn: !Ref ALBTargetGroup
      LoadBalancerArn: !Ref ALB
      Port: 80
      Protocol: HTTP

  # ALB Target Group
  ALBTargetGroup:
    Type: 'AWS::ElasticLoadBalancingV2::TargetGroup'
    Properties:
      Name: ALBTargetGroup
      Port: 80
      Protocol: HTTP
      VpcId: !Ref VPC
      HealthCheckProtocol: HTTP
      HealthCheckPort: 80
      HealthCheckPath: /
      HealthCheckTimeoutSeconds: 5                  # Time in seconds for the health check timeout
      UnhealthyThresholdCount: 2                    # Number of consecutive health check failures before marking the target as unhealthy
      HealthyThresholdCount: 2                      # Number of consecutive health checks required before marking the target as healthy
      TargetType: instance

  # Auto-Scaling Group
  AutoScalingGroup:
    Type: 'AWS::AutoScaling::AutoScalingGroup'
    Properties:
      VPCZoneIdentifier:
        - !Ref PublicSubnet1
        - !Ref PublicSubnet2
      LaunchTemplate:
        LaunchTemplateId: !Ref LaunchTemplate
        Version: '1'
      MinSize: 1
      MaxSize: 3
      DesiredCapacity: 2
      TargetGroupARNs:
        - !Ref ALBTargetGroup
      Tags:
        - Key: Name
          Value: Skillsync-ASG
          PropagateAtLaunch: true
      HealthCheckType: EC2
      HealthCheckGracePeriod: 300

  # Auto Scaling Policy - Scale Out
  ScaleOutPolicy:
    Type: 'AWS::AutoScaling::ScalingPolicy'
    Properties:
      AutoScalingGroupName: !Ref AutoScalingGroup
      PolicyType: TargetTrackingScaling
      TargetTrackingConfiguration:
        PredefinedMetricSpecification: 
        TargetValue: 70.0
          PredefinedMetricType: ASGAverageCPUUtilization

  # Auto Scaling Policy - Scale In
  ScaleInPolicy:
    Type: 'AWS::AutoScaling::ScalingPolicy'
    Properties:
      AutoScalingGroupName: !Ref AutoScalingGroup
      PolicyType: TargetTrackingScaling
      TargetTrackingConfiguration:
        PredefinedMetricSpecification:
        TargetValue: 30.0
          PredefinedMetricType: ASGAverageCPUUtilization
  # S3 Bucket
  S3Bucket:
    Type: 'AWS::S3::Bucket'
    Properties:
      BucketName: my-cloudformation-bucket-${AWS::AccountId}-${AWS::Region}
      Tags:
        - Key: Name
          Value: Skillsync-Bucket

Outputs:
  VPCId:
    Description: "The ID of the Virtual Private Cloud (VPC) created by this template."
    Value: !Ref VPC

  SubnetId:
    Description: "The ID of the public subnets created within the VPC."
    Value: !Ref PublicSubnet1
           !Ref PublicSubnet2

  RDPSecurityGroupId:
    Description: "The ID of the security group allowing RDP access to the EC2 instances."
    Value: !Ref RDPSecurityGroup

  ALBSecurityGroupId:
    Description: "The ID of the security group associated with the Application Load Balancer."
    Value: !Ref ALBSecurityGroup

  LaunchTemplateId:
    Description: "The ID of the Launch Template used by the Auto Scaling Group."
    Value: !Ref LaunchTemplate

  AutoScalingGroupId:
    Description: "The ID of the Auto Scaling Group managing the EC2 instances."
    Value: !Ref AutoScalingGroup

  ALBName:
    Description: "The name of the Application Load Balancer (ALB) created."
    Value: !Ref ALB

  ALBEndpoint:
    Description: "The DNS name of the Application Load Balancer (ALB) created."
    Value: !GetAtt MyALB.DNSName

  TargetGroupARN:
    Description: "The ARN of the Target Group associated with the ALB."
    Value: !Ref ALBTargetGroup

  S3BucketName:
    Description: "The name of the S3 bucket created by this template."
    Value: !Ref S3Bucket
